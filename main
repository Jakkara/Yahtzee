import java.util.ArrayList;
import java.util.Arrays;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;

public class Yahtzee {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		Scanner reader = new Scanner(System.in);
		
		Hand test = new Hand();
		test.throwHand();
		int[] testArray = test.getHand();
		for (int i = 0; i < 5; i++){
			System.out.println(testArray[i]);
		}
		
		//olio, joka tarkastaa käsien antamat pistemäärät
		checkHand checker = new checkHand();
		checker.setHand(testArray);
		
		//pelaajien omat pistetaulut
		ArrayList<Integer> p1score = new ArrayList<Integer>();
		for (int i = 0; i< 13; i++){
			p1score.add(0);
		}
		ArrayList<Integer> p2score = new ArrayList<Integer>();
		for (int i = 0; i<13;i++){
			p2score.add(0);
		}
		//tyhjä lista joka osoitetaan kohti sillä hetkellä 
		//aktiivista pelaajaa
		ArrayList<Integer> current = p1score;
		//boolean-taulu, josta nähdään mitkä kädet pelaaja
		//on jo valinnut
		boolean[] boolP1 = new boolean[13];
		boolean[] boolP2 = new boolean[13];
		boolean[] boolCurrent;
		
		//luodaan pistetaulukko, johon ilmestyy jokainen pelaajalle tarjottu
		//pistemäärä
		int[] score = new int[13];
		score[1] = checker.checkOne();
		score[2] = checker.checkTwo();
		score[3] = checker.checkThree();
		score[4] = checker.checkFour();
		score[5] = checker.checkFive();
		if (score[1] + score[2] + score[3] + score[4]+ score[5] 
				> 63){score[0] = 35;}
		score[6] = checker.checkThreeofaKind();
		score[7] = checker.checkFourofaKind();
		score[8] = checker.checkSmallStraight();
		score[9] = checker.checkLargeStraight();
		score[10] = checker.checkChance();
		score[11] = checker.checkFullHouse();
		score[12] = checker.checkYahtzee();
		
	}
		//***********
		//* TALLENNUS
		//***********
	
		/**
		 * @param p1points Pelaajan pisteet arraylistana
		 * @param p2points -||-
		 * @throws IOException
		 * @author J
		 * Tallentaa pistelistan tekstitiedostoon muodossa *,*,*,*,...
		 */
		public void savePlayers(Object[][] data) throws IOException{
			ArrayList<Integer> p1points = new ArrayList<Integer>();
			ArrayList<Integer> p2points = new ArrayList<Integer>();
			String p1sheet = "C:/Users/Public/Documents/sheet1.txt";
			String p2sheet = "C:/Users/Public/Documents/sheet2.txt";
			Save manager1 = new Save(p1sheet);
			Save manager2 = new Save(p2sheet); 
			manager1.writeToFile(p1points);
			manager2.writeToFile(p2points);
		}
}
